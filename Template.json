{
    "Name": "JenkinsSetup",
    "Description": "Setup Jenkins server on Microsoft Azure",
    "Version": "1.0.0",
    "Parameters": [
        {
            "Name": "Region",
            "Type": "String",
            "TypeHint": "AzureRegionName",
            "Description": "Azure region to which the infrastructure will be deployed."
        },
        {
            "Name": "AffinityGroup",
            "Type": "String",
            "TypeHint": "AzureAffinityGroupName",
            "Description": "Azure affinity group to which the infrastructure will be deployed."
        },        
        {
            "Name": "DiskStore",
            "Type": "String",
            "TypeHint": "AzureStorageName",
            "Description": "Name of Azure storage account for creating VM disks. Will be created only if it does not already exists. If it exists then it should lie in the specified affinity group."
        },
        {
            "Name": "JenkinsCloudService",
            "Type": "String",
            "TypeHint": "AzureCloudServiceName",
            "Description": "Name of the Azure Cloud Service to which Jenkins VM is to be deployed. Will be created only if it does not already exists. If it exists then it should lie in the specified affinity group."
        },        
        {
            "Name": "VMSize",
            "Type": "String",
            "TypeHint": "AzureRoleSize",
            "Description": "Size of the Jenkins VM.",
            "Default": "Small"
        },        
        {
            "Name": "AdminName",
            "Type": "String",
            "TypeHint": "username",
            "Description": "Name of local administrator account.",
            "Minimum": 1,
            "Maximum": 64
        },
        {
            "Name": "AdminPassword",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Password of local administrator account.",
            "MaskValue": true,
            "Minimum": 8,
            "Maximum": 127
        },
		{
            "Name": "JenkinsDataDiskSizeInGB",
            "Type": "Number",            
            "Description": "Disk size for Jenkins data directory.",            
            "Default": 40
        }
    ],
    "Network": {
        "DnsServers": [],
        "LocalSites": [],
        "VirtualSites": [],
		"ReservedIPs": []
    },
    "AffinityGroup": {
        "Name": "{{AffinityGroup}}",
        "Region": "{{Region}}",
        "Label": "Created by Brewmaster"
    },
    "StorageAccounts": [
        {
            "Name": "{{DiskStore}}",
            "AffinityGroup": "{{AffinityGroup}}",
            "Region": "{{Region}}",
            "Description": "A non-georedundant disk store",
            "DisableGeoReplication": true
        }
    ],	
    "CloudServices": [
        {
            "Name": "{{JenkinsCloudService}}",
            "AffinityGroup": "{{AffinityGroup}}",
            "Region": "{{Region}}",
            "Description": "Jenkins Setup",
            "Deployment": {                
                "VirtualMachines": [
                    {
                        "Name": "jenkins1",
                        "RoleSize": "{{VMSize}}",
						"AvailabilitySet": "jenkins-avs",
                        "OsVirtualDisk": {
                            "OsType": "Windows",
                            "OsImageName": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2*"
                        },
                        "DataVirtualDisks": [
                            {
                                "DiskId": "disk0",
                                "Lun": 0,
                                "LogicalSizeInGB": "{{JenkinsDataDiskSizeInGB}}"
                            }
                        ],
                        "WindowsConfigSet": {
                            "LocalAdminCredentialId": "vmadmin",
                            "EnableAutomaticUpdates": false,
                            "ChangePasswordAtLogon": false,
                            "DisableRdp": false
                        },
                        "ConfigSets": [
                            "JenkinsServer"
                        ]
                    }
                ],
                "DiskStorageAccount": "{{DiskStore}}"
            }                          
        }
    ],   
    "Credentials": [        
        {
            "Name": "vmadmin",
            "UserName": "{{AdminName}}",
            "Password": "{{AdminPassword}}"
        }
    ],
    "ConfigSets": [
        {
            "Name": "JenkinsServer",
            "Description": "Jenkins server",
            "Endpoints": [
                {
                    "Name": "JenkinsWebUI",
                    "LocalPort": "8080",
                    "Protocol": "tcp",
                    "Port": "80"                                
                }
            ],
            "ConfigurationIds": [
				"InstallJenkins",
                "SetupDotNetCloudBuildEnvironment"                           			
			]
        }        
    ],
    "Configurations": [
		{
			"Name": "InstallJenkins",
			"Description": "Jenkins server installation",
			"Resources": [
				{
                    "Type": "xFormatDisks",
                    "ImportModule": "xAzureDataDisks",
                    "ImportTypeName": "ADITI_xFormatDisks",
                    "Name": "FormatRawDisks",
                    "Args": {
                        "FirstDriveLetter": "F"
                    }
                },
                {
                    "Type": "File",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "SetupFolder",
                    "Args": {
                    "Type": "Directory",
                    "DestinationPath": "C:\\setup",
                    "Ensure": "Present"
                    },
                    "Nodes": [],
                    "Requires": [],
                    "Description": null
                },
                {
                      "Credential": "vmadmin",
                      "GetScript": "return @{ Downloaded = Test-Path -LiteralPath \"C:\\setup\\jenkins.zip\" -PathType Leaf }",
                      "SetScript": "Write-Verbose \"Downloading Jenkins Setup.\" -Verbose\r\nInvoke-WebRequest 'http://mirrors.jenkins-ci.org/windows/latest' -OutFile \"C:\\setup\\jenkins.zip\"",
                      "TestScript": "if (Test-Path -LiteralPath \"C:\\setup\\jenkins.zip\" -PathType Leaf)\r\n{Write-Verbose \"C:\\setup\\jenkins.zip already exists.\" -Verbose\r\nreturn $true}\r\nreturn $false",
                      "Type": "Script",
                      "ImportModule": null,
                      "ImportTypeName": null,
                      "Name": "DownloadJenkins",
                      "Args": {},
                      "Nodes": [],
                      "Requires": [
                        "[File]SetupFolder"
                      ],
                      "Description": null
                },
                {
                    "Type": "File",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "SetupExtractFolder",
                    "Args": {
                    "Type": "Directory",
                    "DestinationPath": "C:\\setup\\jenkins",
                    "Ensure": "Present"
                    },
                    "Nodes": [],
                    "Requires": [],
                    "Description": null
                },
				{
					"Type": "Package",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "SevenZipTool",
                    "Args": {
                        "Path":"http://downloads.sourceforge.net/sevenzip/7z920.msi",
                        "Name": "7-Zip 9.20",
						"ProductId": "",
						"Arguments": "LicenseAccepted=1",
                        "Ensure": "Present"
                    }
				},                
                {
                    "Type": "File",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "JenkinsDirectory",
                    "Args": {
                    "Type": "Directory",
                    "DestinationPath": "F:\\jenkins",
                    "Ensure": "Present"
                    },
                    "Nodes": [],
                    "Requires": [],
                    "Description": null
                },
				{
                    "Type": "xInstallJenkins",
                    "ImportModule": "xJenkins",
                    "ImportTypeName": "ADITI_xInstallJenkins",
                    "Name": "InstallAndStartJenkins",
                    "Args": {
                        "JenkinsZipPath": "C:\\setup",
                        "JenkinsSetupExtractPath" : "C:\\setup\\jenkins",
                        "JenkinsDirectory": "F:\\jenkins"                        
                    },
                    "Requires": [
                        "[File]SetupExtractFolder",
                        "[File]JenkinsDirectory",
						"[xFormatDisks]FormatRawDisks",
                        "[Package]SevenZipTool"
                    ]
                },
                {
                    "Type": "xWaitForJenkinsService",
                    "ImportModule": "xJenkins",
                    "ImportTypeName": "ADITI_xWaitForJenkinsService",
                    "Name": "WaitForJenkinsService",
                    "Args": {
                        "RetryCount":"%%10",
                        "RetryIntervalSec":"%%12",
                        "JenkinsConnectionPort": "%%8080"
                    },
                    "Requires": ["[xInstallJenkins]InstallAndStartJenkins"]                  
                },
                {             
                  "Type": "xFirewall",
                  "ImportModule": "xNetworking",
                  "ImportTypeName": "MSFT_xFirewall",
                  "Name": "OpenWebAccessPort",
                  "Args": {
                    "Name": "JenkinsWebAccess",
                    "Description": "Jenkins online portal access",
                    "LocalPort": "8080",
                    "Protocol": "TCP",
                    "Access": "Allow",
                    "State": "Enabled",
                    "Direction": "Inbound"
                  },
                  "Requires": ["[xInstallJenkins]InstallAndStartJenkins"]
                },
                {
                      "Credential": "vmadmin",
                      "GetScript": "return @{ Downloaded = Test-Path -LiteralPath \"F:\\jenkins\\jenkins-cli.jar\" -PathType Leaf }",
                      "SetScript": "Write-Verbose \"Downloading Jenkins CLI.\" -Verbose\r\nInvoke-WebRequest 'http://localhost:8080/jnlpJars/jenkins-cli.jar' -OutFile \"F:\\jenkins\\jenkins-cli.jar\"",
                      "TestScript": "if (Test-Path -LiteralPath \"F:\\jenkins\\jenkins-cli.jar\" -PathType Leaf)\r\n{Write-Verbose \"F:\\jenkins\\jenkins-cli.jar already exists.\" -Verbose\r\nreturn $true}\r\nreturn $false",
                      "Type": "Script",
                      "ImportModule": null,
                      "ImportTypeName": null,
                      "Name": "DownloadJenkinsCli",
                      "Args": {},
                      "Nodes": [],
                      "Requires": [                     
                            "[xWaitForJenkinsService]WaitForJenkinsService"                          
                        ],
                      "Description": null
                },                                    
                {
                    "Type": "File",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "PluginsDirectory",
                    "Args": {
                    "Type": "Directory",
                    "DestinationPath": "F:\\jenkins\\plugins",
                    "Ensure": "Present"
                    },
                    "Nodes": [],
                    "Requires": [],
                    "Description": null
                },
                {
                    "Type": "xJenkinsPlugins",
                    "ImportModule": "xJenkins",
                    "ImportTypeName": "ADITI_xJenkinsPlugins",
                    "Name": "InstallPlugins",
                    "Args": {
                        "JenkinsPath": "F:\\jenkins"
                    },
                    "Requires": ["[File]PluginsDirectory",
                                 "[xFormatDisks]FormatRawDisks",
                                 "[xWaitForJenkinsService]WaitForJenkinsService"]
                },
                {
                      "Credential": "vmadmin",
                      "GetScript": "return  @{ JenkinsService = $s =  Get-Service | Where { $_.Name -eq \"Jenkins\" }; }",
                      "SetScript": "Write-Verbose \"Restarting Jenkins service.\" \r\n Restart-Service Jenkins",
                      "TestScript": "return $false",
                      "Type": "Script",
                      "ImportModule": null,
                      "ImportTypeName": null,
                      "Name": "RestartJenkins",
                      "Args": {},
                      "Nodes": [],
                      "Requires": [                     
                            "[xJenkinsPlugins]InstallPlugins"                          
                        ],
                      "Description": null
                }              
			]
        },
        {
            "Name": "SetupDotNetCloudBuildEnvironment",
            "Description": "Setup build environment via installing requisite dependencies for building and deploying .NET cloud projects.",
            "Resources": [
                {
                    "Type": "Package",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "InstallWebPI",
                    "Args": {
                        "Credential": "vmadmin",
                        "Name": "Microsoft Web Platform Installer 4.6",
                        "ProductId": "16C7D2AD-20CA-491E-80BC-8607A9AACED9",
                        "Path": "http://download.microsoft.com/download/7/0/4/704CEB4C-9F42-4962-A2B0-5C84B0682C7A/WebPlatformInstaller_amd64_en-US.msi",
                        "LogPath": "%BrewmasterDir%\\Logs\\WebPlatformInstaller_amd64_en-US.log",
                        "Ensure": "Present"
                    }
                },
                {
                    "Type": "xInstallProduct",
                    "ImportModule": "xInstallWebPIFeed",
                    "ImportTypeName": "ADITI_xInstallProduct",
                    "Name": "InstallAzurePowershell",
                    "Args": {
                        "ProductTitleOrId": "WindowsAzurePowershell"
                    },
                    "Requires": [
                        "[Package]InstallWebPI"
                    ]
                }
            ]
        }
	]
}